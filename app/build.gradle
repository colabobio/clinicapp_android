apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

// Load secrets to use in the app
def secretsPropertiesFile = rootProject.file("secrets.properties")
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

// Load keystore parameters
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
// Do not need signing config yet
//    signingConfigs {
//        config {
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//        }
//    }

    compileSdkVersion 33
    defaultConfig {
        applicationId "org.broadinstitute.clinicapp"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "web_client_id", secretsProperties['web_client_id'])
    }

    flavorDimensions "default"
    buildTypes {
        release {

            minifyEnabled true
            proguardFile 'proguard/rxjava.pro'
            proguardFile 'proguard/retrofit.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        VM {
            buildConfigField "String", "keycloakBaseUrl", '"http://10.53.16.16:8180/auth/realms/ClinicApp/protocol/openid-connect"'
            buildConfigField "String", "apiBaseUrl", '"http://10.53.16.16:8044/services/clinicappmicroservice"'
            buildConfigField "String", "host", '"10.53.16.16"'
            buildConfigField "String", "clientId", '"web_app"'
            buildConfigField "String", "redirectUri", '"clinicapp://oauthresponse"'
        }
        Cloud {
            buildConfigField "String", "keycloakBaseUrl", '"http://34.70.60.18/auth/realms/ClinicApp/protocol/openid-connect"'
            buildConfigField "String", "apiBaseUrl", '"http://35.222.143.29:8044/services/clinicappmicroservice"'
            buildConfigField "String", "host", '"34.70.60.18"'
            buildConfigField "String", "clientId", '"web_app"'
            buildConfigField "String", "redirectUri", '"clinicapp://oauthresponse"'
        }

    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding = true
    }


    // Add for using latest experimental build of Android Extensions
    androidExtensions {
        experimental = true
    }

    aaptOptions {
        noCompress "tflite"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    namespace 'org.broadinstitute.clinicapp'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$corektxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion"

    // RxJava support for Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava2:$roomVersion"

    // Kotlin
    implementation "net.zetetic:android-database-sqlcipher:$sqlcipherVersion"
    implementation "androidx.sqlite:sqlite-ktx:$sqliteVersion"

    // Implementation of the AndroidX SQLite interfaces via the Android framework APIs.
    implementation "androidx.sqlite:sqlite-framework:$sqliteVersion"

    // JWT
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.brsanthu:migbase64:$migbase64Version"

    // WorkManager
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"

    // Google play services (location, authentication, etc)
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"
    implementation "com.google.android.gms:play-services-auth:$playServicesAuthVersion"

    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.paging:paging-runtime:$pagingVersion" // For Kotlin use paging-runtime-ktx

    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2:$pagingVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:core:$testCoreVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunit"

    // g drive libs
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    implementation 'com.google.http-client:google-http-client-gson:1.42.3'
    implementation('com.google.api-client:google-api-client-android:1.26.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    implementation "org.tensorflow:tensorflow-lite:+"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
