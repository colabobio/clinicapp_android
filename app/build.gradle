apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "org.broadinstitute.clinicapp"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "default"
    buildTypes {
        release {

            minifyEnabled true
            proguardFile 'proguard/rxjava.pro'
            proguardFile 'proguard/retrofit.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    productFlavors {
        VM {
            buildConfigField "String", "keycloakBaseUrl", '"http://10.53.16.16:8180/auth/realms/ClinicApp/protocol/openid-connect"'
            buildConfigField "String", "apiBaseUrl", '"http://10.53.16.16:8044/services/clinicappmicroservice"'
            buildConfigField "String", "host", '"10.53.16.16"'
            buildConfigField "String", "clientId", '"web_app"'
            buildConfigField "String", "redirectUri", '"clinicapp://oauthresponse"'
            }
        Cloud {
            buildConfigField "String", "keycloakBaseUrl", '"http://34.70.60.18/auth/realms/ClinicApp/protocol/openid-connect"'
            buildConfigField "String", "apiBaseUrl", '"http://35.222.143.29:8044/services/clinicappmicroservice"'
            buildConfigField "String", "host", '"34.70.60.18"'
            buildConfigField "String", "clientId", '"web_app"'
            buildConfigField "String", "redirectUri", '"clinicapp://oauthresponse"'
        }

    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }


    // Add for using latest experimental build of Android Extensions
    androidExtensions {
        experimental = true
    }
    namespace 'org.broadinstitute.clinicapp'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$corektxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // rxjava
    implementation "io.reactivex.rxjava3:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxandroidVersion"
    implementation "io.reactivex.rxjava3:rxkotlin:$rxkotlinVersion"

//    // RxJava support for Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava3:$roomVersion"

    // Kotlin
//    implementation (name: 'android-database-sqlcipher-4.3.0', ext: 'aar')
    implementation "net.zetetic:android-database-sqlcipher:$sqlcipherVersion"
    implementation "androidx.sqlite:sqlite-ktx:$sqliteVersion"

    // Implementation of the AndroidX SQLite interfaces via the Android framework APIs.
    implementation "androidx.sqlite:sqlite-framework:$sqliteVersion"
    // JWT
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.brsanthu:migbase64:$migbase64Version"
    // WorkManager
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"

    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.paging:paging-runtime:$pagingVersion" // For Kotlin use paging-runtime-ktx

    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2:$pagingVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:core:$testCoreVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunit"
}
